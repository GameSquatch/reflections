What happens when you initialize a repository? Why do you need to do it?

It creates an empty repository. So that you can start adding commits
to it, duh.


How is the staging area different from the working directory and the
repository? What value do you think it offers?

It's different from both, because it's a place in between them, where
you can decide what to commit from the working directory.


How can you use the staging area to make sure you have one commit per
logical change?

You can check the difference between the most recent commit and what
is currently staged to see if the change is logical.


What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

When you want to create different versions or slight adjustments to
certain parts in the main branch. They help by being able to go on
using code for each branch.


How do the diagrams help you visualize the branch structure?

By showing how each commit reacts with its parent commit. It
also shows how branching is a great way to make changes.


What is the result of merging two branches together? Why do we represent
it in the diagram the way we do?

The result is a new commit with ALL the shared lines, none of the removed
lines, and all of the added lines. Because, that's accurate.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing
merges manually?

+ It won't merge code that won't work.
+ You can see how the conflicts are working in different branches
- You have to fix it
