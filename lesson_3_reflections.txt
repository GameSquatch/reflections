When would you want to use a remote repository rather than keeping
all your work local?

When you're working on a project publically, or when you need to be
able to access your own work from multiple computers or locations.


Why might you want to always pull changes manually rather than having
Git automatically stay up-to-date with your remote repository?

Because you could be at a different point, locally, on your project
than the one on the remote repository.


Describe the differences between forks, clones, and branches. When
would you use one instead of another?

Forks are a GitHub exclusive operation to essential clone someone
elses branch to your own remote repository, allowing the orginal
author to maintain credit. Clones are "copies" of repositories,
whether they are local or remote. Branches are variations of files
from the orginal that have no effect on the orginal. You can chose
to merge the branch with the original later. Each has there own uses.


What is the benefit of having a copy of the last known state of the
remote stored locally?

If you're about to go offline for a while or something similar, you
will be able to have the remote's history with you while you work
further.


How would you collaborate without using Git or GitHub? What would
be easier, and what would be harder?

I would probably just send code to the people I'm working with
when I've completed my task. Hopefully, they will have done the
same with their tasks without interfering with the overall code.
I guess not having to know git bash would be easier, but everything
else would be more difficult, like finding changes and mistakes, as
well as resoring to old, working versions of code.


When would you want to make changes in a separate branch rather than
directly in master? What benefits does each approach have?

I would want to make changes in a separate branch when I'm changing
something that will cause the overall meaning to change or code to
behave differently. You can make big changes without effecting the way
the code runs, and eventually you can merge it when it works with the 
master branch. Working directly on master can just be quicker.
